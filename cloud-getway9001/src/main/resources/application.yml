server:
  port: 80
# eureka客户端
eureka:
  instance:
    instance-id: cloud-gatewey80
    prefer-ip-address: true #访问路径可以显示IP地址
  client:
    # 表示是否把自己注册进eurekaserver 默认为true
    register-with-eureka: true
    # 是否从eurekaserver抓取已有的注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #      defaultZone: http://localhost:7001/eureka
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
# 服务名
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_route # 路由的ID，没有固定规则胆要求唯一，建议配合服务名
#          uri: http://localhost:8021 # 匹配后提供服务的路由地址
          uri: lb://CLOUD-PROVIDER-SERVICE
          predicates:
            - Path=/cloud/user/** # 断言，路径相匹配的进行路由

#        - id: payment_route1 # 路由的ID，没有固定规则胆要求唯一，建议配合服务名
#            #          uri: http://localhost:8021 # 匹配后提供服务的路由地址
#            uri: lb://CLOUD-PROVIDER-SERVICE
#            predicates:
#              - Path=/cloud/user/** # 断言，路径相匹配的进行路由
#              - After=2021-06-23T15:16:32.353+08:00[Asia/Shanghai]  #在当前时间之后访问接口，才能访问生效